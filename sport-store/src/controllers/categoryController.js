import Category from "../models/category.js";

// üìå L·∫•y t·∫•t c·∫£ danh m·ª•c
export const getAllCategories = async (req, res) => {
  try {
    const categories = await Category.find();
    res.status(200).json(categories);
  } catch (error) {
    res.status(500).json({ error: "L·ªói khi l·∫•y danh m·ª•c" });
  }
};

// üìå L·∫•y chi ti·∫øt m·ªôt danh m·ª•c
export const getCategoryById = async (req, res) => {
  try {
    const category = await Category.findById(req.params.id);
    if (!category) return res.status(404).json({ error: "Danh m·ª•c kh√¥ng t·ªìn t·∫°i" });
    res.status(200).json(category);
  } catch (error) {
    res.status(500).json({ error: "L·ªói khi l·∫•y danh m·ª•c" });
  }
};

// üìå T·∫°o danh m·ª•c m·ªõi
export const createCategory = async (req, res) => {
  try {
    const { name, description, parentCategory, image } = req.body;

    if (!name) return res.status(400).json({ error: "T√™n danh m·ª•c l√† b·∫Øt bu·ªôc" });

    const newCategory = new Category({ name, description, parentCategory, image });
    await newCategory.save();
    res.status(201).json(newCategory);
  } catch (error) {
    res.status(500).json({ error: "L·ªói khi t·∫°o danh m·ª•c" });
  }
};

// üìå C·∫≠p nh·∫≠t danh m·ª•c
export const updateCategory = async (req, res) => {
  try {
    const { name, description, parentCategory, image } = req.body;
    const category = await Category.findByIdAndUpdate(
      req.params.id,
      { name, description, parentCategory, image },
      { new: true }
    );
    if (!category) return res.status(404).json({ error: "Danh m·ª•c kh√¥ng t·ªìn t·∫°i" });
    res.status(200).json(category);
  } catch (error) {
    res.status(500).json({ error: "L·ªói khi c·∫≠p nh·∫≠t danh m·ª•c" });
  }
};

// üìå X√≥a danh m·ª•c
export const deleteCategory = async (req, res) => {
  try {
    const category = await Category.findByIdAndDelete(req.params.id);
    if (!category) return res.status(404).json({ error: "Danh m·ª•c kh√¥ng t·ªìn t·∫°i" });
    res.status(200).json({ message: "X√≥a danh m·ª•c th√†nh c√¥ng" });
  } catch (error) {
    res.status(500).json({ error: "L·ªói khi x√≥a danh m·ª•c" });
  }
};